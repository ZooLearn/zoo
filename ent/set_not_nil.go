// Code generated by ent, DO NOT EDIT.

package ent

import "time"

// set field if value's pointer is not nil.
func (t *TagUpdate) SetNotNilUpdatedAt(value *time.Time) *TagUpdate {
	if value != nil {
		return t.SetUpdatedAt(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagUpdateOne) SetNotNilUpdatedAt(value *time.Time) *TagUpdateOne {
	if value != nil {
		return t.SetUpdatedAt(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagCreate) SetNotNilUpdatedAt(value *time.Time) *TagCreate {
	if value != nil {
		return t.SetUpdatedAt(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagUpdate) SetNotNilDeleteAt(value *time.Time) *TagUpdate {
	if value != nil {
		return t.SetDeleteAt(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagUpdateOne) SetNotNilDeleteAt(value *time.Time) *TagUpdateOne {
	if value != nil {
		return t.SetDeleteAt(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagCreate) SetNotNilDeleteAt(value *time.Time) *TagCreate {
	if value != nil {
		return t.SetDeleteAt(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagUpdate) SetNotNilKey(value *string) *TagUpdate {
	if value != nil {
		return t.SetKey(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagUpdateOne) SetNotNilKey(value *string) *TagUpdateOne {
	if value != nil {
		return t.SetKey(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagCreate) SetNotNilKey(value *string) *TagCreate {
	if value != nil {
		return t.SetKey(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagUpdate) SetNotNilAlias(value *string) *TagUpdate {
	if value != nil {
		return t.SetAlias(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagUpdateOne) SetNotNilAlias(value *string) *TagUpdateOne {
	if value != nil {
		return t.SetAlias(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagCreate) SetNotNilAlias(value *string) *TagCreate {
	if value != nil {
		return t.SetAlias(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagUpdate) SetNotNilColor(value *string) *TagUpdate {
	if value != nil {
		return t.SetColor(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagUpdateOne) SetNotNilColor(value *string) *TagUpdateOne {
	if value != nil {
		return t.SetColor(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagCreate) SetNotNilColor(value *string) *TagCreate {
	if value != nil {
		return t.SetColor(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagUpdate) SetNotNilImageUrl(value *string) *TagUpdate {
	if value != nil {
		return t.SetImageUrl(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagUpdateOne) SetNotNilImageUrl(value *string) *TagUpdateOne {
	if value != nil {
		return t.SetImageUrl(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TagCreate) SetNotNilImageUrl(value *string) *TagCreate {
	if value != nil {
		return t.SetImageUrl(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (u *UserUpdate) SetNotNilUpdatedAt(value *time.Time) *UserUpdate {
	if value != nil {
		return u.SetUpdatedAt(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserUpdateOne) SetNotNilUpdatedAt(value *time.Time) *UserUpdateOne {
	if value != nil {
		return u.SetUpdatedAt(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserCreate) SetNotNilUpdatedAt(value *time.Time) *UserCreate {
	if value != nil {
		return u.SetUpdatedAt(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserUpdate) SetNotNilDeleteAt(value *time.Time) *UserUpdate {
	if value != nil {
		return u.SetDeleteAt(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserUpdateOne) SetNotNilDeleteAt(value *time.Time) *UserUpdateOne {
	if value != nil {
		return u.SetDeleteAt(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserCreate) SetNotNilDeleteAt(value *time.Time) *UserCreate {
	if value != nil {
		return u.SetDeleteAt(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserUpdate) SetNotNilName(value *string) *UserUpdate {
	if value != nil {
		return u.SetName(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserUpdateOne) SetNotNilName(value *string) *UserUpdateOne {
	if value != nil {
		return u.SetName(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserCreate) SetNotNilName(value *string) *UserCreate {
	if value != nil {
		return u.SetName(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserUpdate) SetNotNilEmail(value *string) *UserUpdate {
	if value != nil {
		return u.SetEmail(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserUpdateOne) SetNotNilEmail(value *string) *UserUpdateOne {
	if value != nil {
		return u.SetEmail(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserCreate) SetNotNilEmail(value *string) *UserCreate {
	if value != nil {
		return u.SetEmail(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserUpdate) SetNotNilPassword(value *string) *UserUpdate {
	if value != nil {
		return u.SetPassword(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserUpdateOne) SetNotNilPassword(value *string) *UserUpdateOne {
	if value != nil {
		return u.SetPassword(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserCreate) SetNotNilPassword(value *string) *UserCreate {
	if value != nil {
		return u.SetPassword(*value)
	}
	return u
}
